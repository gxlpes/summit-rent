// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Summit.Data;

#nullable disable

namespace Summit.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.22");

            modelBuilder.Entity("Summit.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("car_id");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Plate")
                        .HasColumnType("TEXT")
                        .HasColumnName("plate");

                    b.Property<bool>("isRented")
                        .HasColumnType("INTEGER")
                        .HasColumnName("rented");

                    b.HasKey("Id");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("Summit.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("client_id");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT")
                        .HasColumnName("password_hash");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("Summit.Models.Dealership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("dealership_id");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT")
                        .HasColumnName("city");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("State")
                        .HasColumnType("TEXT")
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.ToTable("dealerships");
                });

            modelBuilder.Entity("Summit.Models.Departure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("departures");
                });

            modelBuilder.Entity("Summit.Models.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("destinations");
                });

            modelBuilder.Entity("Summit.Models.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("car_id");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<double>("price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("insurances");
                });

            modelBuilder.Entity("Summit.Models.Intent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("intent_id");

                    b.Property<string>("CarId")
                        .HasColumnType("TEXT")
                        .HasColumnName("car_id");

                    b.Property<string>("ClientId")
                        .HasColumnType("TEXT")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.HasKey("Id");

                    b.ToTable("intents");
                });

            modelBuilder.Entity("Summit.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("car_id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("customerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("customerId");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("Summit.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("car_id");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT")
                        .HasColumnName("comment");

                    b.Property<double>("Grade")
                        .HasColumnType("REAL")
                        .HasColumnName("grade");

                    b.Property<int?>("RentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RentId");

                    b.ToTable("ratings");
                });

            modelBuilder.Entity("Summit.Models.Rent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("departureId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("destinationId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("insuranceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ClientId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("departureId");

                    b.HasIndex("destinationId");

                    b.HasIndex("insuranceId");

                    b.ToTable("rents");
                });

            modelBuilder.Entity("Summit.Models.Payment", b =>
                {
                    b.HasOne("Summit.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerId");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("Summit.Models.Rating", b =>
                {
                    b.HasOne("Summit.Models.Rent", "Rent")
                        .WithMany()
                        .HasForeignKey("RentId");

                    b.Navigation("Rent");
                });

            modelBuilder.Entity("Summit.Models.Rent", b =>
                {
                    b.HasOne("Summit.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("Summit.Models.Customer", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("Summit.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.HasOne("Summit.Models.Departure", "departure")
                        .WithMany()
                        .HasForeignKey("departureId");

                    b.HasOne("Summit.Models.Destination", "destination")
                        .WithMany()
                        .HasForeignKey("destinationId");

                    b.HasOne("Summit.Models.Insurance", "insurance")
                        .WithMany()
                        .HasForeignKey("insuranceId");

                    b.Navigation("Car");

                    b.Navigation("Client");

                    b.Navigation("Payment");

                    b.Navigation("departure");

                    b.Navigation("destination");

                    b.Navigation("insurance");
                });
#pragma warning restore 612, 618
        }
    }
}
