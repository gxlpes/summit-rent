// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Summit.Data;

#nullable disable

namespace Summit.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231003120020_initial_tables")]
    partial class initial_tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.22");

            modelBuilder.Entity("Summit.Models.Aluguel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("CarroId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ChegadaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT")
                        .HasColumnName("data");

                    b.Property<Guid>("PagamentoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SaidaId")
                        .HasColumnType("TEXT");

                    b.Property<int>("SeguroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarroId");

                    b.HasIndex("ChegadaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PagamentoId");

                    b.HasIndex("SaidaId");

                    b.HasIndex("SeguroId");

                    b.ToTable("alugueis");
                });

            modelBuilder.Entity("Summit.Models.Avaliacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid?>("AluguelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT")
                        .HasColumnName("comentario");

                    b.Property<int>("Estrelas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("estrelas");

                    b.HasKey("Id");

                    b.HasIndex("AluguelId");

                    b.ToTable("avaliacoes");
                });

            modelBuilder.Entity("Summit.Models.Carro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<bool>("Alugado")
                        .HasColumnType("INTEGER")
                        .HasColumnName("alugado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("placa");

                    b.HasKey("Id");

                    b.ToTable("carros");
                });

            modelBuilder.Entity("Summit.Models.Chegada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT")
                        .HasColumnName("cidade");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT")
                        .HasColumnName("chegada");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT")
                        .HasColumnName("endereco");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT")
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.ToTable("chegadas");
                });

            modelBuilder.Entity("Summit.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Summit.Models.Concessionaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cidade");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("estado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("concessionarias");
                });

            modelBuilder.Entity("Summit.Models.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("TEXT")
                        .HasColumnName("data_pagamento");

                    b.Property<string>("Metodo")
                        .HasColumnType("TEXT")
                        .HasColumnName("metodo");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("pagamentos");
                });

            modelBuilder.Entity("Summit.Models.Saida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT")
                        .HasColumnName("cidade");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT")
                        .HasColumnName("saida");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT")
                        .HasColumnName("endereco");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT")
                        .HasColumnName("estado");

                    b.HasKey("Id");

                    b.ToTable("saidas");
                });

            modelBuilder.Entity("Summit.Models.Seguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL")
                        .HasColumnName("preco");

                    b.HasKey("Id");

                    b.ToTable("seguros");
                });

            modelBuilder.Entity("Summit.Models.Tentativa", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("cliente_id");

                    b.Property<Guid>("CarroId")
                        .HasColumnType("TEXT")
                        .HasColumnName("id_carro");

                    b.Property<DateTime>("DataTentativa")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.HasKey("ClienteId");

                    b.ToTable("tentativas");
                });

            modelBuilder.Entity("Summit.Models.Aluguel", b =>
                {
                    b.HasOne("Summit.Models.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Summit.Models.Chegada", "Chegada")
                        .WithMany()
                        .HasForeignKey("ChegadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Summit.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Summit.Models.Pagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Summit.Models.Saida", "Saida")
                        .WithMany()
                        .HasForeignKey("SaidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Summit.Models.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("SeguroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Chegada");

                    b.Navigation("Cliente");

                    b.Navigation("Pagamento");

                    b.Navigation("Saida");

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("Summit.Models.Avaliacao", b =>
                {
                    b.HasOne("Summit.Models.Aluguel", "Aluguel")
                        .WithMany()
                        .HasForeignKey("AluguelId");

                    b.Navigation("Aluguel");
                });

            modelBuilder.Entity("Summit.Models.Pagamento", b =>
                {
                    b.HasOne("Summit.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
